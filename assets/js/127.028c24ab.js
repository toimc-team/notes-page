(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{1056:function(e,a,s){"use strict";s.r(a);var t=s(11),r=Object(t.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"创建用户并分配权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建用户并分配权限"}},[e._v("#")]),e._v(" 创建用户并分配权限")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://docs.mongodb.com/manual/core/authentication/",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考官方文档"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"角色说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#角色说明"}},[e._v("#")]),e._v(" 角色说明")]),e._v(" "),a("p",[e._v("以下是MongoDB中内置的角色：")]),e._v(" "),a("h3",{attrs:{id:"数据库用户角色-database-user-roles-常用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库用户角色-database-user-roles-常用"}},[e._v("#")]),e._v(" "),a("strong",[e._v("数据库用户角色(Database User Roles) - 常用")])]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("read")])])]),e._v(" "),a("p",[e._v("read角色包含读取所有非系统集合数据和订阅部分系统集合(system.indexes、system.js、system.namespaces)的权限。")]),e._v(" "),a("p",[e._v("该角色权限包含命令操作：changeStream、collStats、dbHash、dbStats、find、killCursors、listIndexes、listCollections。")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("readWrite")])])]),e._v(" "),a("p",[e._v("readWrite角色包含read角色的权限同时增加了对非系统集合数据的修改权限，但只对系统集合system.js有修改权限。")]),e._v(" "),a("p",[e._v("该角色权限包含命令操作：collStats、convertToCapped、createCollection、dbHash、dbStats、dropCollection、createIndex、dropIndex、find、insert、killCursors、listIndexes、listCollections、remove、renameCollectionSameDB、update。")]),e._v(" "),a("h3",{attrs:{id:"数据库管理角色-database-administration-roles-常用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库管理角色-database-administration-roles-常用"}},[e._v("#")]),e._v(" "),a("strong",[e._v("数据库管理角色(Database Administration Roles) - 常用")])]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("dbAdmin")])])]),e._v(" "),a("p",[e._v("dbAdmin角色包含执行某些管理任务(与schema相关、索引、收集统计信息)的权限，该角色不包含用户和角色管理的权限。")]),e._v(" "),a("p",[e._v("对于系统集合(system.indexes、system.namespaces、system.profile)包含命令操作：collStats、dbHash、dbStats、find、killCursors、listIndexes、listCollections、dropCollection and createCollection(仅适用system.profile)")]),e._v(" "),a("p",[e._v("对于非系统集合包含命令操作：bypassDocumentValidation、collMod、collStats、compact、convertToCapped、createCollection、createIndex、dbStats、dropCollection、dropDatabase、dropIndex、enableProfiler、reIndex、renameCollectionSameDB、repairDatabase、storageDetails、validate")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("dbOwner")])])]),e._v(" "),a("p",[e._v("dbOwner角色包含对数据所有的管理操作权限。即包含角色readWrite、dbAdmin和userAdmin的权限。")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("userAdmin")])])]),e._v(" "),a("p",[e._v("userAdmin角色包含对当前数据库创建和修改角色和用户的权限。该角色允许向其它任何用户(包括自身)授予任何权限，所以这个角色也提供间接对超级用户(root)的访问权限，如果限定在admin数据中，也包括集群管理的权限。")]),e._v(" "),a("p",[e._v("该角色权限包含命令操作：changeCustomData、changePassword、createRole、createUser、dropRole、dropUser、grantRole、revokeRole、setAuthenticationRestriction、viewRole、viewUser。")]),e._v(" "),a("h3",{attrs:{id:"集群管理角色-cluster-administration-roles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群管理角色-cluster-administration-roles"}},[e._v("#")]),e._v(" 集群管理角色(Cluster Administration Roles)**")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("clusterManager")])])]),e._v(" "),a("p",[e._v("clusterManager角色包含对集群监控和管理操作的权限。拥有此角色的用户能够访问集群中的config数据库和local数据库。")]),e._v(" "),a("p",[e._v("对于整个集群该角色包含命令操作：addShard、appendOplogNote、applicationMessage、cleanupOrphaned、flushRouterConfig、listSessions (3.6新增)、listShards、removeShard、replSetConfigure、replSetGetConfig、replSetGetStatus、replSetStateChange、resync。")]),e._v(" "),a("p",[e._v("对于集群中所有的数据库包含命令操作：enableSharding、moveChunk、splitChunk、splitVector。")]),e._v(" "),a("p",[e._v("对于集群中config数据库和local数据库包含的命令操作可以参考官方文档："),a("a",{attrs:{href:"https://docs.mongodb.com/manual/reference/built-in-roles/#clusterManager",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[e._v("https://docs.mongodb.com/manual/reference/built-in-roles/#clusterManager")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("clusterMonitor")])])]),e._v(" "),a("p",[e._v("clusterMonitor角色包含针对监控工具具有只读操作的权限。如工具"),a("strong",[e._v("MongoDB Cloud Manager")]),e._v("和工具"),a("strong",[e._v("Ops Manager")]),e._v("。")]),e._v(" "),a("p",[e._v("对于整个集群该角色包含命令操作：checkFreeMonitoringStatus(4.0新增)、connPoolStats、getCmdLineOpts、getLog、getParameter、getShardMap、hostInfo、inprog、listDatabases、listSessions (3.6新增)、listShards、netstat、replSetGetConfig、replSetGetStatus、serverStatus、setFreeMonitoring (4.0新增)、shardingState、top。")]),e._v(" "),a("p",[e._v("对于集群中所有的数据为包含命令操作：collStats、dbStats、getShardVersion、indexStats、useUUID(3.6新增)。")]),e._v(" "),a("p",[e._v("对于集群中config数据库和local数据库包含的命令操作可以参考官方文档："),a("a",{attrs:{href:"https://docs.mongodb.com/manual/reference/built-in-roles/#clusterMonitor",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[e._v("https://docs.mongodb.com/manual/reference/built-in-roles/#clusterMonitor")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("hostManager")])])]),e._v(" "),a("p",[e._v("hostManager角色包含针对数据库服务器的监控和管理操作权限。")]),e._v(" "),a("p",[e._v("对于整个集群该角色包含命令操作：applicationMessage、closeAllDatabases、connPoolSync、cpuProfiler、flushRouterConfig、fsync、invalidateUserCache、killAnyCursor (4.0新增)、killAnySession (3.6新增)、killop、logRotate、resync、setParameter、shutdown、touch、unlock。")]),e._v(" "),a("p",[e._v("对于集群中所有的数据库包含命令操作：killCursors、repairDatabase。")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("clusterAdmin")])])]),e._v(" "),a("p",[e._v("clusterAdmin角色包含MongoDB集群管理最高的操作权限。该角色包含"),a("strong",[e._v("clusterManager")]),e._v("、"),a("strong",[e._v("clusterMonitor")]),e._v("和"),a("strong",[e._v("hostManager")]),e._v("三个角色的所有权限，并且还拥有dropDatabase操作命令的权限。")]),e._v(" "),a("h3",{attrs:{id:"备份和恢复角色-backup-and-restoration-roles-常用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#备份和恢复角色-backup-and-restoration-roles-常用"}},[e._v("#")]),e._v(" "),a("strong",[e._v("备份和恢复角色(Backup and Restoration Roles) - 常用")])]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("backup")])])]),e._v(" "),a("p",[e._v("backup角色包含备份MongoDB数据最小的权限。")]),e._v(" "),a("p",[e._v("对于MongoDB中所有的数据库资源包含命令操作：listDatabases、listCollections、listIndexes。")]),e._v(" "),a("p",[e._v("对于整个集群包含命令操作：appendOplogNote、getParameter、listDatabases。")]),e._v(" "),a("p",[e._v("对于以下数据库资源提供find操作权限：")]),e._v(" "),a("ol",[a("li",[e._v("对于集群中的所有非系统集合，包括自身的config数据库和local数据库；")]),e._v(" "),a("li",[e._v("对于集群中的系统集合：system.indexes、system.namespaces、system.js和system.profile；")]),e._v(" "),a("li",[e._v("admin数据库中的集合：admin.system.users和admin.system.roles；")]),e._v(" "),a("li",[e._v("config.settings集合；")]),e._v(" "),a("li",[e._v("2.6版本之前的system.users集合。")])]),e._v(" "),a("p",[e._v("对于config.setting集合还有insert和update操作权限。")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("restore")])])]),e._v(" "),a("p",[e._v("restore角色包含从备份文件中还原恢复MongoDB数据(除了system.profile集合)的权限。")]),e._v(" "),a("p",[e._v("restore角色有以下注意事项：")]),e._v(" "),a("ol",[a("li",[e._v("如果备份中包含system.profile集合而恢复目标数据库没有system.profile集合，mongorestore会尝试重建该集合。因此执行用户需要有额外针对system.profile集合的createCollection和convertToCapped操作权限；")]),e._v(" "),a("li",[e._v("如果执行mongorestore命令时指定选项"),a("code",[e._v("--oplogReplay")]),e._v("，则restore角色包含的权限无法进行重放oplog。如果需要进行重放oplog，则需要只对执行mongorestore的用户授予包含对实例中任何资源具有任何权限的自定义角色。")])]),e._v(" "),a("p",[e._v("对于整个集群包含命令操作：getParameter。")]),e._v(" "),a("p",[e._v("对于所有非系统集合包含命令操作：bypassDocumentValidation、changeCustomData、changePassword、collMod、convertToCapped、createCollection、createIndex、createRole、createUser、dropCollection、dropRole、dropUser、grantRole、insert、revokeRole、viewRole、viewUser。")]),e._v(" "),a("p",[e._v("关于restore角色包含其它的命令操作可以参考官方文档："),a("a",{attrs:{href:"https://docs.mongodb.com/manual/reference/built-in-roles/#restore",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[e._v("https://docs.mongodb.com/manual/reference/built-in-roles/#restore")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("h3",{attrs:{id:"全数据库级角色-all-database-roles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全数据库级角色-all-database-roles"}},[e._v("#")]),e._v(" "),a("strong",[e._v("全数据库级角色(All-Database Roles)")])]),e._v(" "),a("p",[e._v("以下角色只存在于admin数据库，并且适用于除了config和local之外所有的数据库。")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("readAnyDatabase")])])]),e._v(" "),a("p",[e._v("readAnyDatabase角色包含对除了config和local之外所有数据库的只读权限。同时对于整个集群包含listDatabases命令操作。")]),e._v(" "),a("p",[e._v("在MongoDB3.4版本之前，该角色包含对config和local数据库的读取权限。当前版本如果需要对这两个数据库进行读取，则需要在admin数据库授予用户对这两个数据库的read角色。")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("readWriteAnyDatabase")])])]),e._v(" "),a("p",[e._v("readWriteAnyDatabase角色包含对除了config和local之外所有数据库的读写权限。同时对于整个集群包含listDatabases命令操作。")]),e._v(" "),a("p",[e._v("在MongoDB3.4版本之前，该角色包含对config和local数据库的读写权限。当前版本如果需要对这两个数据库进行读写，则需要在admin数据库授予用户对这两个数据库的readWrite角色。")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("userAdminAnyDatabase")])])]),e._v(" "),a("p",[e._v("userAdminAnyDatabase角色包含类似于userAdmin角色对于所有数据库的用户管理权限，除了config数据库和local数据库。")]),e._v(" "),a("p",[e._v("对于集群包含命令操作：authSchemaUpgrade、invalidateUserCache、listDatabases。")]),e._v(" "),a("p",[e._v("对于系统集合admin.system.users和admin.system.roles包含命令操作：collStats、dbHash、dbStats、find、killCursors、planCacheRead、createIndex、dropIndex。")]),e._v(" "),a("p",[e._v("该角色不会限制用户授予权限的操作，因此，拥有角色的用户也有可能授予超过角色范围内的权限给自己或其它用户，也可以使自己成为超级用户，"),a("strong",[e._v("userAdminAnyDatabase")]),e._v("角色也可以认为是MongoDB中的超级用户角色。")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("dbAdminAnyDatabase")])])]),e._v(" "),a("p",[e._v("dbAdminAnyDatabase角色包含类似于dbAdmin角色对于所有数据库管理权限，除了config数据库和local数据库。同时对于整个集群包含listDatabases命令操作。")]),e._v(" "),a("p",[e._v("在MongoDB3.4版本之前，该角色包含对config和local数据库的管理权限。当前版本如果需要对这两个数据库进行管理，则需要在admin数据库授予用户对这两个数据库的dbAdmin角色。")]),e._v(" "),a("h3",{attrs:{id:"超级用户角色-superuser-roles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#超级用户角色-superuser-roles"}},[e._v("#")]),e._v(" "),a("strong",[e._v("超级用户角色(Superuser Roles)")])]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("慎用")])]),e._v(" "),a("p",[e._v("以下角色包含在任何数据库授予任何用户任何权限的权限。这意味着用户如果有以下角色之一可以为自己在任何数据库授予任何权限。")]),e._v(" "),a("ul",[a("li",[e._v("dbOwner角色(作用范围为admin数据库)")]),e._v(" "),a("li",[e._v("userAdmin角色(作用范围为admin数据库)")]),e._v(" "),a("li",[e._v("userAdminAnyDatabase角色")])]),e._v(" "),a("p",[e._v("以下角色包含数据库所有资源的所有操作权限。")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("root")])])]),e._v(" "),a("p",[e._v("root角色包含角色readWriteAnyDatabase、dbAdminAnyDatabase、userAdminAnyDatabase、clusterAdmin、restore和backup联合之后所有的权限。")]),e._v(" "),a("h3",{attrs:{id:"内部角色-internal-role"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内部角色-internal-role"}},[e._v("#")]),e._v(" "),a("strong",[e._v("内部角色(Internal Role)")])]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("__system")])])]),e._v(" "),a("p",[e._v("MongoDB将此角色授予代表集群成员的用户对象，如副本集(replica set)成员或"),a("strong",[e._v("mongos")]),e._v("实例。该角色允许用户对于需要的数据库操作都具有相应的权限，不要将该角色授予应用程序用户或其它管理员用户。")]),e._v(" "),a("h3",{attrs:{id:"总结说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结说明"}},[e._v("#")]),e._v(" 总结说明")]),e._v(" "),a("p",[e._v("通过以上对内置角色的说明，总结一下较为常用的内置角色，如下表：")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("角色")]),e._v(" "),a("th",[e._v("权限描述")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("read")]),e._v(" "),a("td",[e._v("可以读取指定数据库中任何数据。")])]),e._v(" "),a("tr",[a("td",[e._v("readWrite")]),e._v(" "),a("td",[e._v("可以读写指定数据库中任何数据，包括创建、重命名、删除集合。")])]),e._v(" "),a("tr",[a("td",[e._v("readAnyDatabase")]),e._v(" "),a("td",[e._v("可以读取所有数据库中任何数据(除了数据库config和local之外)。")])]),e._v(" "),a("tr",[a("td",[e._v("readWriteAnyDatabase")]),e._v(" "),a("td",[e._v("可以读写所有数据库中任何数据(除了数据库config和local之外)。")])]),e._v(" "),a("tr",[a("td",[e._v("dbAdmin")]),e._v(" "),a("td",[e._v("可以读取指定数据库以及对数据库进行清理、修改、压缩、获取统计信息、执行检查等操作。")])]),e._v(" "),a("tr",[a("td",[e._v("dbAdminAnyDatabase")]),e._v(" "),a("td",[e._v("可以读取任何数据库以及对数据库进行清理、修改、压缩、获取统计信息、执行检查等操作(除了数据库config和local之外)。")])]),e._v(" "),a("tr",[a("td",[e._v("clusterAdmin")]),e._v(" "),a("td",[e._v("可以对整个集群或数据库系统进行管理操作。")])]),e._v(" "),a("tr",[a("td",[e._v("userAdmin")]),e._v(" "),a("td",[e._v("可以在指定数据库创建和修改用户。")])]),e._v(" "),a("tr",[a("td",[e._v("userAdminAnyDatabase")]),e._v(" "),a("td",[e._v("可以在指定数据库创建和修改用户(除了数据库config和local之外)。")])])])]),e._v(" "),a("h2",{attrs:{id:"创建自定义角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建自定义角色"}},[e._v("#")]),e._v(" 创建自定义角色")]),e._v(" "),a("h3",{attrs:{id:"查看环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看环境"}},[e._v("#")]),e._v(" 查看环境")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("这里要注意"),a("code",[e._v("imooc")]),e._v("用户是"),a("code",[e._v("imooc")]),e._v("数据库的"),a("code",[e._v("imooc")]),e._v("角色")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("> show dbs;\nadmin   0.000GB\nconfig  0.000GB\nimooc   0.001GB\nlocal   0.000GB\n\n> use imooc;\nswitched to db imooc\n")])])]),a("p",[e._v("目前的权限情况")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('> db.createRole(\n    {\n        role: "imooc",\n        privileges: [\n            { resource: { db: "imooc", collection: "users" }, actions: ["find", "update"] },\n            { resource: { db: "imooc", collection: "rights" }, actions: ["find"] },\n        ],\n        roles: []\n    }\n)\n\n或\n\n> db.adminCommand(\n    {\n        createRole: "imooc",\n        privileges: [\n            { resource: { db: "imooc", collection: "users" }, actions: ["find", "update"] },\n            { resource: { db: "imooc", collection: "rights" }, actions: ["find"] }\n        ],\n        roles: []\n    }\n')])])]),a("h3",{attrs:{id:"查看自定义的角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看自定义的角色"}},[e._v("#")]),e._v(" 查看自定义的角色")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('> db.getRole("imooc", { showPrivileges: true })\n\n// 或\n\n> db.getRoles({ rolesInfo: 1, showPrivileges: true })\n\n// 或\n\n> use admin\n> db.runCommand(\n    {\n        rolesInfo: { role: "imooc", db: "admin" },\n        showPrivileges: true\n    }\n)\n')])])]),a("h3",{attrs:{id:"更新自定义的角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新自定义的角色"}},[e._v("#")]),e._v(" 更新自定义的角色")]),e._v(" "),a("p",[e._v("为自定义角色imooc更新集合imooc.rights的insert权限。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('> db.updateRole(\n    "imooc",\n    {\n        privileges: [\n            { resource: { db: "imooc", collection: "users" }, actions: ["find", "update"] },\n            { resource: { db: "imooc", collection: "rights" }, actions: ["find", "insert"] }\n        ],\n        roles: []\n    }\n)\n\n// 或\n\n> db.adminCommand(\n    {\n        updateRole: "imooc",\n        privileges: [\n            { resource: { db: "imooc", collection: "users" }, actions: ["find", "update"] },\n            { resource: { db: "imooc", collection: "rights" }, actions: ["find", "insert"] }\n        ],\n        roles: []\n    }\n)\n')])])]),a("h3",{attrs:{id:"添加角色权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加角色权限"}},[e._v("#")]),e._v(" 添加角色权限")]),e._v(" "),a("p",[e._v("为自定义角色imooc添加集合imooc.rights的remove权限。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('db.grantPrivilegesToRole(\n    "imooc",\n    [\n        { resource: { db: "imooc", collection: "rights" }, actions: ["remove"] }\n    ]\n)\n\n// 或\n\n> use admin\n> db.runCommand(\n    {\n        grantPrivilegesToRole: "imooc",\n        privileges: [\n            { resource: { db: "imooc", collection: "rights" }, actions: ["remove"] }\n        ]\n    }\n)\n')])])]),a("h3",{attrs:{id:"删除角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除角色"}},[e._v("#")]),e._v(" 删除角色")]),e._v(" "),a("p",[e._v("为自定义角色imooc收回集合imooc.users的update权限。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('> db.revokePrivilegesFromRole(\n    "imooc", \n    [\n        { resource: { db: "imooc", collection: "users" }, actions: ["update"] }\n    ]\n)\n\n或\n\n> use admin\n> db.runCommand(\n    { \n        revokePrivilegesFromRole: "imooc", \n        privileges: [\n            { resource: { db: "imooc", collection: "users" }, actions: ["update"] }\n        ] \n    }\n)\n')])])]),a("h2",{attrs:{id:"创建用户并分配角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建用户并分配角色"}},[e._v("#")]),e._v(" 创建用户并分配角色")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('use imooc\n\ndb.createUser(\n  {\n    user: "admin",\n    pwd: "123456",\n    roles: [ { role: "dbOwner", db: "imooc" } ]\n  }\n)\n')])])]),a("h3",{attrs:{id:"查看用户信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看用户信息"}},[e._v("#")]),e._v(" 查看用户信息")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('> use imooc\n> db.getUser("admin", { showPrivileges: true })\n\n// 或\n\n> db.getSiblingDB("imooc").runCommand(\n    {\n        usersInfo: "admin",\n        showPrivileges: true\n\n    }\n)\n')])])]),a("h3",{attrs:{id:"为用户添加角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为用户添加角色"}},[e._v("#")]),e._v(" 为用户添加角色")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('> use imooc\n> db.grantRolesToUser(\n    "admin",\n    [\n        { role: "dbOwner", db: "imooc" }\n    ]\n)\n\n// 或\n\n> use imooc\n> db.runCommand(\n    {\n        grantRolesToUser: "admin",\n        roles:\n            [\n                { role: "dbOwner", db: "imooc" }\n            ]\n    }\n)\n')])])]),a("h3",{attrs:{id:"删除用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除用户"}},[e._v("#")]),e._v(" 删除用户")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('> use imooc\n> db.dropUser("admin")\n')])])]),a("h2",{attrs:{id:"更改用户密码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更改用户密码"}},[e._v("#")]),e._v(" 更改用户密码")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('> use imooc\n> db.changeUserPassword("admin", "long-random-password")\n')])])]),a("h2",{attrs:{id:"开启mongodb的访问控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启mongodb的访问控制"}},[e._v("#")]),e._v(" 开启MongoDB的访问控制")]),e._v(" "),a("p",[e._v("要开启访问控制，则需要在mongod进程启动时加上选项"),a("code",[e._v("--auth")]),e._v("或在启动配置文件加入选项"),a("code",[e._v("auth=true")]),e._v("，并重启mongodb实例（使用docker开启的同学不用管）")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("## mongod配置文件如下")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# cat mongodb.cnf ")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("journal")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("dbpath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/data/mongodb/4.0/data\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("directoryperdb")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("fork")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("27017")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("logpath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/data/mongodb/4.0/logs/mongodb.log\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("quiet")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("bind_ip_all")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("auth")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("## 启动mongodb实例")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# mongod -f mongodb.cnf ")]),e._v("\nabout to fork child process, waiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("until")]),e._v(" server is ready "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" connections.\nforked process: "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("44347")]),e._v("\nchild process started successfully, parent exiting\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);